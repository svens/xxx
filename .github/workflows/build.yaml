name: Build

on: [push, pull_request]

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ${{ matrix.host }}-latest

    strategy:
      matrix:
        host: [ubuntu, macos]
        toolchain: [gcc, clang]
        include:
          - host: windows
            toolchain: msvc

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Configure buildsystem
        run: |
          case "${{ matrix.host }}-${{ matrix.toolchain }}" in
            ubuntu-gcc)
              sudo apt-get install --yes ninja-build
              export CC=gcc-12 CXX=g++-12
              ;;
            ubuntu-clang)
              sudo apt-get install --yes ninja-build
              export CC=clang-14 CXX=clang++-14
              ;;
            macos-gcc)
              brew install ninja
              export CC=gcc-12 CXX=g++-12
              ;;
            macos-clang)
              brew install ninja
              ;;
          esac

          case "${{ matrix.host }}" in
            ubuntu|macos)
              cmake . -G "Ninja Multi-Config" -DCMAKE_CONFIGURATION_TYPES="Debug;Release"
              ;;
            windows)
              cmake . -G "Visual Studio 17 2022" -A x64
              ;;
          esac

      - name: Debug build/test
        run: |
          cmake --build . --config Debug
          ctest --build-config Debug --output-on-failure

      - name: Release build/test
        run: |
          cmake --build . --config Release
          ctest --build-config Release --output-on-failure

  coverage:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Configure buildsystem
        run: |
          sudo apt-get install --yes ninja-build
          curl -Ls https://github.com/linux-test-project/lcov/releases/download/v1.15/lcov-1.15.tar.gz \
            | gunzip -c \
            | tar xvf -
          sudo make -C lcov-1.15 install
          CC=gcc-12 CXX=g++-12 COV=gcov-12 cmake . -DCMAKE_BUILD_TYPE=Coverage

      - name: Generate test coverage
        run: cmake --build . --target xxx_test-cov

      - uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: xxx_test.info
